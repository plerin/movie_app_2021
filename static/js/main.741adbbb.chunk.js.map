{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","title","year","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAiCeA,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQH,MAAOA,EAAOO,IAAKP,IACrC,sBAAKK,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BL,IAC9B,oBAAIK,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,SAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCsBOC,G,mNAjCbC,MAAQ,CACJC,WAAW,EACXC,OAAS,I,EAIbC,U,sBAAY,8BAAAC,EAAA,sEAE6BC,IAAMC,IAAI,yEAFvC,gBAEWJ,EAFX,EAEHK,KAAOA,KAAOL,OACrB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAHxB,2C,4KAOVQ,KAAKN,Y,qIAEE,IAAD,EACwBM,KAAKT,MAA3BC,EADF,EACEA,UAAWC,EADb,EACaA,OACnB,OAAO,yBAASV,UAAU,YAAnB,SACJS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGA,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GACV,OAAO,cAAC,EAAD,CAAsBC,GAAID,EAAMC,GAAIvB,KAAMsB,EAAMtB,KAAMD,MAAOuB,EAAMvB,MAAOE,QAASqB,EAAMrB,QAASC,OAAQoB,EAAME,mBAAoBrB,OAAQmB,EAAMnB,QAAtImB,EAAMC,e,GA1BrBE,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.741adbbb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ title, year, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} title={title} alt={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import { render } from '@testing-library/react';\r\nimport React from 'react';\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\nimport \"./App.css\"\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n      isLoading: true,\r\n      movies : []\r\n  };\r\n\r\n  // 비동기 함수, 기다려야 해\r\n  getMovies = async () => {\r\n    // data fetching으로 받아와야 하는데 axiou는 data fetching하는 layer 같은 것\r\n    const {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\")\r\n    this.setState({movies, isLoading: false});\r\n  }\r\n\r\n  async componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n  render(){\r\n    const { isLoading, movies } = this.state;\r\n    return <section className=\"container\">\r\n      {isLoading ? (\r\n        <div className=\"loader\">\r\n          <span className=\"loader__text\">Loading...</span>\r\n        </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map(movie => {\r\n              return <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres} />\r\n            })}\r\n          </div>\r\n        )}</section>\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}